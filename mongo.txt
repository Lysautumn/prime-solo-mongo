// 1. Create a collection named orders
db.createCollection("orders")

// 2. Insert at least 3 documents that represent an order.
db.orders.insert({orderDate: new Date('1985-10-26'), orderTotal: 20.50, lineItems: [{unitPrice: 4.00}, {quantity: 5}, {productName: "Coffee"}]})
db.orders.insert({orderDate: new Date('1999-12-31'), orderTotal: 100, lineItems: [{unitPrice: 50}, {quantity: 2}, {productName: "Sweet Shoes"}]})
db.orders.insert({orderDate: new Date('2016-10-25'), orderTotal: 4.00, lineItems: [{unitPrice: 1.00}, {quantity: 4}, {productName: "Stickers"}]})

// 3. Find a single order document, any order document
db.orders.find({orderTotal: 100})

// 4. Find all orders and make them look pretty
db.orders.find().pretty()

// 5. Find all orders with an orderDate that is prior to 1/1/2016
db.orders.find({orderDate: {$lt: new Date('2016-01-01')}})

// 6. Find all orders with an orderDate that is after 1/1/2016
db.orders.find({orderDate: {$gt: new Date('2016-01-01')}})

// 7. Find all orders with lineItems that have a quantity that is less than 50, but greater than 5
db.orders.find({$and: [{"lineItems.quantity": {$lt: 50}}, {"lineItems.quantity": {$gt:5}}]})

// 8. Update one of your line items to 42.99
db.orders.update({"lineItems.unitPrice": 50}, {$set: {"lineItems.$.unitPrice": 42.99}})

// 9. Remove one of your orders
db.orders.remove({"orderTotal": 100})
